Getting and Cleaning Data Project

Description of the project
The experiments have been carried out with a group of 30 volunteers within an age bracket of 19-48 years. Each person performed six activities (WALKING, WALKING_UPSTAIRS, WALKING_DOWNSTAIRS, SITTING, STANDING, LAYING) wearing a smartphone (Samsung Galaxy S II) on the waist. 
Using its embedded accelerometer and gyroscope, we captured 3-axial linear acceleration and 3-axial angular velocity at a constant rate of 50Hz. The experiments have been video-recorded to label the data manually. 
The obtained dataset has been randomly partitioned into two sets, where 70% of the volunteers was selected for generating the training data and 30% the test data. 

The sensor signals (accelerometer and gyroscope) were pre-processed by applying noise filters and then sampled in fixed-width sliding windows of 2.56 sec and 50% overlap (128 readings/window). The sensor acceleration signal, which has gravitational and body motion components, was separated using a Butterworth low-pass filter into body acceleration and gravity. 
The gravitational force is assumed to have only low frequency components, therefore a filter with 0.3 Hz cutoff frequency was used. From each window, a vector of features was obtained by calculating variables from the time and frequency domain. See 'features_info.txt' for more details. 

Data Set Information

For each record in the dataset it is provided:
- Triaxial acceleration from the accelerometer (total acceleration) and the estimated body acceleration.
- Triaxial Angular velocity from the gyroscope.
- A 561-feature vector with time and frequency domain variables.
- Activity label.
- An identifier of the subject who carried out the experiment.

Section 1. Merge the training and the test sets to create one data set.

After setting the source directory for the files, read into tables the data located in:
features.txt
activity_labels.txt
subject_train.txt
x_train.txt
y_train.txt
subject_test.txt
x_test.txt
y_test.txt

Assign column names and merge to create one data set.

Merge  training set by merging subject_train, y_train and x_train using cbin(). Then merge the test set by merging subject_test, y_test and x_test, again using cbind().
Finally merge train and test data to create a final data set using rbind().
The data set includes the following 82 variables:
 [1] "activityID"                                        
 [2] "subjectID"                                         
 [3] "timeBodyAccelerometer-mean()-X"                    
 [4] "timeBodyAccelerometer-mean()-Y"                    
 [5] "timeBodyAccelerometer-mean()-Z"                    
 [6] "timeBodyAccelerometer-std()-X"                     
 [7] "timeBodyAccelerometer-std()-Y"                     
 [8] "timeBodyAccelerometer-std()-Z"                     
 [9] "timeGravityAccelerometer-mean()-X"                 
[10] "timeGravityAccelerometer-mean()-Y"                 
[11] "timeGravityAccelerometer-mean()-Z"                 
[12] "timeGravityAccelerometer-std()-X"                  
[13] "timeGravityAccelerometer-std()-Y"                  
[14] "timeGravityAccelerometer-std()-Z"                  
[15] "timeBodyAccelerometerJerk-mean()-X"                
[16] "timeBodyAccelerometerJerk-mean()-Y"                
[17] "timeBodyAccelerometerJerk-mean()-Z"                
[18] "timeBodyAccelerometerJerk-std()-X"                 
[19] "timeBodyAccelerometerJerk-std()-Y"                 
[20] "timeBodyAccelerometerJerk-std()-Z"                 
[21] "timeBodyGyroscope-mean()-X"                        
[22] "timeBodyGyroscope-mean()-Y"                        
[23] "timeBodyGyroscope-mean()-Z"                        
[24] "timeBodyGyroscope-std()-X"                         
[25] "timeBodyGyroscope-std()-Y"                         
[26] "timeBodyGyroscope-std()-Z"                         
[27] "timeBodyGyroscopeJerk-mean()-X"                    
[28] "timeBodyGyroscopeJerk-mean()-Y"                    
[29] "timeBodyGyroscopeJerk-mean()-Z"                    
[30] "timeBodyGyroscopeJerk-std()-X"                     
[31] "timeBodyGyroscopeJerk-std()-Y"                     
[32] "timeBodyGyroscopeJerk-std()-Z"                     
[33] "timeBodyAccelerometerMagnitude-mean()"             
[34] "timeBodyAccelerometerMagnitude-std()"              
[35] "timeGravityAccelerometerMagnitude-mean()"          
[36] "timeGravityAccelerometerMagnitude-std()"           
[37] "timeBodyAccelerometerJerkMagnitude-mean()"         
[38] "timeBodyAccelerometerJerkMagnitude-std()"          
[39] "timeBodyGyroscopeMagnitude-mean()"                 
[40] "timeBodyGyroscopeMagnitude-std()"                  
[41] "timeBodyGyroscopeJerkMagnitude-mean()"             
[42] "timeBodyGyroscopeJerkMagnitude-std()"              
[43] "frequencyBodyAccelerometer-mean()-X"               
[44] "frequencyBodyAccelerometer-mean()-Y"               
[45] "frequencyBodyAccelerometer-mean()-Z"               
[46] "frequencyBodyAccelerometer-std()-X"                
[47] "frequencyBodyAccelerometer-std()-Y"                
[48] "frequencyBodyAccelerometer-std()-Z"                
[49] "frequencyBodyAccelerometer-meanFreq()-X"           
[50] "frequencyBodyAccelerometer-meanFreq()-Y"           
[51] "frequencyBodyAccelerometer-meanFreq()-Z"           
[52] "frequencyBodyAccelerometerJerk-mean()-X"           
[53] "frequencyBodyAccelerometerJerk-mean()-Y"           
[54] "frequencyBodyAccelerometerJerk-mean()-Z"           
[55] "frequencyBodyAccelerometerJerk-std()-X"            
[56] "frequencyBodyAccelerometerJerk-std()-Y"            
[57] "frequencyBodyAccelerometerJerk-std()-Z"            
[58] "frequencyBodyAccelerometerJerk-meanFreq()-X"       
[59] "frequencyBodyAccelerometerJerk-meanFreq()-Y"       
[60] "frequencyBodyAccelerometerJerk-meanFreq()-Z"       
[61] "frequencyBodyGyroscope-mean()-X"                   
[62] "frequencyBodyGyroscope-mean()-Y"                   
[63] "frequencyBodyGyroscope-mean()-Z"                   
[64] "frequencyBodyGyroscope-std()-X"                    
[65] "frequencyBodyGyroscope-std()-Y"                    
[66] "frequencyBodyGyroscope-std()-Z"                    
[67] "frequencyBodyGyroscope-meanFreq()-X"               
[68] "frequencyBodyGyroscope-meanFreq()-Y"               
[69] "frequencyBodyGyroscope-meanFreq()-Z"               
[70] "frequencyBodyAccelerometerMagnitude-mean()"        
[71] "frequencyBodyAccelerometerMagnitude-std()"         
[72] "frequencyBodyAccelerometerMagnitude-meanFreq()"    
[73] "frequencyBodyAccelerometerJerkMagnitude-mean()"    
[74] "frequencyBodyAccelerometerJerkMagnitude-std()"     
[75] "frequencyBodyAccelerometerJerkMagnitude-meanFreq()"
[76] "frequencyBodyGyroscopeMagnitude-mean()"            
[77] "frequencyBodyGyroscopeMagnitude-std()"             
[78] "frequencyBodyGyroscopeMagnitude-meanFreq()"        
[79] "frequencyBodyGyroscopeJerkMagnitude-mean()"        
[80] "frequencyBodyGyroscopeJerkMagnitude-std()"         
[81] "frequencyBodyGyroscopeJerkMagnitude-meanFreq()"    
[82] "activityType"

Section 2. Extract only the measurements on the mean and standard deviation for each measurement.

Create a logical vector (using grepl) that contains TRUE values for the activity and subjects ID, mean and stdev columns and FALSE values for the others. 
Subset this data to keep only the necessary columns.

Section 3. Use descriptive activity names to name the activities in the data set

Merge data subset with the activityType table to inlude the descriptive activity names
WALKING: subject was walking during the test
WALKING_UPSTAIRS: subject was walking up a staircase during the test
WALKING_DOWNSTAIRS: subject was walking down a staircase during the test
SITTING: subject was sitting during the test
STANDING: subject was standing during the test
LAYING: subject was laying down during the test

Section 4. Appropriately label the data set with descriptive activity names

Use gsub function for pattern replacement to clean up the data labels.

Section 5. Create a second, independent tidy data set with the average of each variable for each activity and each subject.

We need to produce only a data set with the average of each variable for each activity and subject
